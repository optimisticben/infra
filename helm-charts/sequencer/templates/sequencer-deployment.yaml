apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sequencer
  labels:
    app: sequencer
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: sequencer
  serviceName: sequencer
  template:
    metadata:
      labels:
        app: sequencer
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      initContainers:
        - name: geth-init
          image: "{{ .Values.repo }}/l2geth:{{ .Values.sequencer.tag }}"
          command:
            - sh
            - -c
            - /geth-scripts/check-for-chaindata.sh
          env:
            - name: L2GETH_GENESIS_URL
              value: {{ .Values.sequencer.L2GETH_GENESIS_URL | quote }}
            - name: BLOCK_SIGNER_PRIVATE_KEY
              value: {{ .Values.sequencer.BLOCK_SIGNER_PRIVATE_KEY | quote }}
          volumeMounts:
            - name: geth-scripts
              mountPath: /geth-scripts
            - name: sequencer
              mountPath: /geth
        - name: wait-for-dtl
          image: nicolaka/netshoot
          command: ['bash', '-c', '/script/wait/wait-for-dtl.sh']
          env:
            - name: ROLLUP_CLIENT_HTTP
              value: {{ .Values.sequencer.ROLLUP_CLIENT_HTTP | quote }}
          volumeMounts:
            - name: wait-scripts
              mountPath: /script/wait

      containers:
      - name: "sequencer"
        image: "{{ .Values.repo }}/l2geth:{{ .Values.sequencer.tag }}"
        command:
          - geth
          - --datadir=$(DATADIR)
          - --password=$(DATADIR)/password
          - --allow-insecure-unlock
          - --unlock=$(BLOCK_SIGNER_ADDRESS)
{{- if eq (default false $.Values.monitoring_enabled) true }}
          - --metrics
          - --metrics.influxdb
          - --metrics.influxdb.endpoint
          - {{ default "http://influxdb.monitoring:8086" .Values.influxdb_endpoint }}
          - --metrics.influxdb.database
          - {{ default "l2geth" .Values.influxdb_database }}
          - --mine
          - --miner.etherbase=$(BLOCK_SIGNER_ADDRESS)
{{- end }}
{{- if eq (default false $.Values.sequencer.pprof_enabled) true }}
          - --pprof
          - --pprofaddr
          - "0.0.0.0"
          - --pprofport
          - "6060"
{{- end }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8545
          protocol: TCP
        - containerPort: 8546
          protocol: TCP
        resources:
{{ toYaml .Values.sequencer.resources | indent 10 }}

        env:
{{ toYaml .Values.sequencer.env | indent 8 }}
        - name: BLOCK_SIGNER_ADDRESS
          value: {{ .Values.sequencer.BLOCK_SIGNER_ADDRESS | quote }}
        - name: CHAIN_ID
          value: {{ .Values.sequencer.CHAIN_ID | quote }}
        - name: NETWORK_ID
          value: {{ .Values.sequencer.CHAIN_ID | quote }}
        - name: ETH1_CTC_DEPLOYMENT_HEIGHT
          value: {{ .Values.sequencer.ETH1_CTC_DEPLOYMENT_HEIGHT | quote }}
        - name: L1_NODE_WEB3_URL
          value: {{ .Values.internal_eth_http_url | quote }}
        - name: ROLLUP_CLIENT_HTTP
          value: {{ .Values.sequencer.ROLLUP_CLIENT_HTTP | quote }}
        - name: ETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS
          value: {{ .Values.sequencer.ETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS | quote }}
        - name: ROLLUP_ADDRESS_MANAGER_OWNER_ADDRESS
          value: {{ .Values.sequencer.ROLLUP_ADDRESS_MANAGER_OWNER_ADDRESS | quote }}
{{- if ne ($.Values.sequencer.ETH1_L1_STANDARD_BRIDGE_ADDRESS) "" }}
        - name: ETH1_L1_STANDARD_BRIDGE_ADDRESS
          value: {{ .Values.sequencer.ETH1_L1_STANDARD_BRIDGE_ADDRESS | quote }}
{{- end }}
        - name: DEPLOYER_HTTP
          value: {{ .Values.sequencer.DEPLOYER_HTTP | quote }}
        - name: ROLLUP_FEE_THRESHOLD_DOWN
          value: {{ .Values.sequencer.ROLLUP_FEE_THRESHOLD_DOWN | quote }}
        - name: ROLLUP_FEE_THRESHOLD_UP
          value: {{ .Values.sequencer.ROLLUP_FEE_THRESHOLD_UP | quote }}
        - name: ROLLUP_TIMESTAMP_REFRESH
          value: {{ .Values.sequencer.ROLLUP_TIMESTAMP_REFRESH | quote }}
        - name: ROLLUP_DISABLE_TRANSFERS
          value: {{ .Values.sequencer.ROLLUP_DISABLE_TRANSFERS | quote }}
        - name: ROLLUP_POLL_INTERVAL
          value: {{ .Values.sequencer.ROLLUP_POLL_INTERVAL | quote }}
{{- if eq ($.Values.sequencer.ROLLUP_ENFORCE_FEES) "true" }}
        - name: ROLLUP_ENFORCE_FEES
          value: "true"
{{- end }}
{{- if ne ($.Values.sequencer.ROLLUP_GAS_PRICE_ORACLE_OWNER_ADDRESS) "" }}
        - name: ROLLUP_GAS_PRICE_ORACLE_OWNER_ADDRESS
          value: {{ .Values.sequencer.ROLLUP_GAS_PRICE_ORACLE_OWNER_ADDRESS | quote }}
{{- end }}
        - name: ETH1_L1_FEE_WALLET_ADDRESS
          value: {{ .Values.sequencer.ETH1_L1_FEE_WALLET_ADDRESS | quote }}
{{- if ne ($.Values.sequencer.ROLLUP_MIN_L2_GAS_LIMIT ) "" }}
        - name: ROLLUP_MIN_L2_GAS_LIMIT
          value: {{ .Values.sequencer.ROLLUP_MIN_L2_GAS_LIMIT | quote }}
{{- end }}

        volumeMounts:
        - name: liveliness-script
          mountPath: /script/liveliness
        - name: sequencer
          mountPath: /geth

        livenessProbe:
          exec:
            command:
              - /script/liveliness/test.sh
              - geth
          initialDelaySeconds: 15
          periodSeconds: 10

      volumes:
      - name: liveliness-script
        configMap:
          name: liveliness-script
          defaultMode: 0777
      - name: wait-scripts
        configMap:
          name: wait-scripts
          defaultMode: 0777
      - name: geth-scripts
        configMap:
          name: geth-scripts
          defaultMode: 0777
      - name: sequencer
{{- if eq (default "local" $.Values.backend) "gcp" }}
        gcePersistentDisk:
          pdName: {{ required ".Values.gcePersistentDisk.sequencer" .Values.gcePersistentDisk.sequencer }}
          fsType: ext4
{{- else }}
        emptyDir: {}
{{- end }}
