apiVersion: v1
kind: ConfigMap
metadata:
  name: wait-scripts
  labels:
    app: sequencer
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
data:
  wait-for-l2.sh: |
    #!/bin/bash
    set -eou
    if [[ -z $L2_NODE_WEB3_URL ]]; then
        echo "Must pass L2_NODE_WEB3_URL"
        exit 1
    fi
    JSON='{"jsonrpc":"2.0","id":0,"method":"eth_chainId","params":[]}'
    echo "Waiting for L2"
    curl \
        -X POST \
        --silent \
        --output /dev/null \
        --retry-connrefused \
        --retry 1000 \
        --retry-delay 1 \
        -d "$JSON" \
        $L2_NODE_WEB3_URL
    echo "Connected to L2"
  wait-for-l1.sh: |
    #!/bin/bash
    set -eou
    if [[ -z $L1_NODE_WEB3_URL ]]; then
        echo "Must pass L1_NODE_WEB3_URL "
        exit 1
    fi
    JSON='{"jsonrpc":"2.0","id":0,"method":"eth_chainId","params":[]}'
    echo "Waiting for L1"
    curl \
        -X POST \
        --silent \
        --output /dev/null \
        --retry-connrefused \
        --retry 1000 \
        --retry-delay 1 \
        -d "$JSON" \
        $L1_NODE_WEB3_URL
    echo "Connected to L1"
  wait-for-dtl.sh: |
    #!/bin/bash
    set -eou
    if [[ -z $ROLLUP_CLIENT_HTTP ]]; then
        echo "Must pass ROLLUP_CLIENT_HTTP"
        exit 1
    fi
    echo "Waiting for DTL"
    curl \
        --silent \
        --output /dev/null \
        --retry-connrefused \
        --retry 1000 \
        --retry-delay 1 \
        $ROLLUP_CLIENT_HTTP
  wait-for-deployer.sh: |
    #!/bin/bash
    set -eou
    if [[ -z $URL ]]; then
        echo "Must pass URL"
        exit 1
    fi
    echo "Waiting for Deployer"
    curl \
        --silent \
        --output /dev/null \
        --retry-connrefused \
        --retry 1000 \
        --retry-delay 1 \
        $URL
    echo "Contracts deployed"
